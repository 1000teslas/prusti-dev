field val_bool: Bool

field val_ref: Ref

function read$(): Perm
  ensures none < result
  ensures result < write


predicate DeadBorrowToken$(borrow: Int) 

predicate tuple0$(self: Ref) {
  true
}

method m_false$$main() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Def path: "false::main"
  
  // Span: prusti-tests/tests/verify/ui/false.rs:14:1: 14:13 (#0)
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const ()
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(tuple0$(_0), write)
  // obtain acc(tuple0$(_0), write)
  
  assert true
  exhale acc(tuple0$(_0), write)
  goto end_of_method
  label end_of_method
}

method m_false$$test2() returns (_0: Ref)
{
  var __t0: Bool
  var __t1: Bool
  var __t2: Bool
  var __t3: Bool
  var __t4: Bool
  var _2: Ref
  label start
  // ========== start ==========
  
  // Def path: "false::test2"
  
  // Span: prusti-tests/tests/verify/ui/false.rs:10:1: 12:2 (#0)
  
  __t0 := false
  __t1 := false
  __t2 := false
  __t3 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] StorageLive(_1)
  
  // [mir] StorageLive(_2)
  
  // [mir] _2 = Not(const false)
  
  _2 := builtin$havoc_ref()
  inhale acc(_2.val_bool, write)
  _2.val_bool := true
  // [mir] FakeRead(ForMatchedPlace, _2)
  
  // [mir] switchInt(_2) -> [false: bb3, otherwise: bb2]
  
  __t4 := _2.val_bool
  if (__t4) {
    goto l1
  }
  goto l0
  label bb2
  // ========== bb2 ==========
  
  __t1 := true
  // [mir] falseEdge -> [real: bb4, imaginary: bb3]
  
  goto bb4
  label bb3
  // ========== bb3 ==========
  
  __t3 := true
  // [mir] _1 = const ()
  
  // [mir] StorageDead(_2)
  
  // [mir] StorageDead(_1)
  
  // [mir] _0 = const ()
  
  // [mir] return
  
  goto return
  label bb4
  // ========== bb4 ==========
  
  __t2 := true
  // [mir] std::rt::begin_panic::<&str>(const "assertion failed: false") -> bb1
  
  // Rust panic - const "assertion failed: false"
  
  assert false
  goto end_of_method
  label l0
  // ========== l0 ==========
  
  // MIR edge bb0 --> bb3
  
  goto bb3
  label l1
  // ========== l1 ==========
  
  // MIR edge bb0 --> bb2
  
  goto bb2
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(tuple0$(_0), write)
  // obtain acc(tuple0$(_0), write)
  
  assert true
  exhale acc(tuple0$(_0), write)
  goto end_of_method
  label end_of_method
}

method m_false$$test1() returns (_0: Ref)
{
  var __t0: Bool
  label start
  // ========== start ==========
  
  // Def path: "false::test1"
  
  // Span: prusti-tests/tests/verify/ui/false.rs:8:1: 8:14 (#0)
  
  __t0 := false
  // Preconditions:
  
  inhale true
  inhale true
  inhale true
  inhale true
  label pre
  goto bb0
  label bb0
  // ========== bb0 ==========
  
  __t0 := true
  // [mir] _0 = const ()
  
  // [mir] return
  
  goto return
  label return
  // ========== return ==========
  
  // Target of any 'return' statement.
  
  // Exhale postcondition
  
  // Fold predicates for &mut args and transfer borrow permissions to old
  
  // Fold the result
  
  fold acc(tuple0$(_0), write)
  // obtain acc(tuple0$(_0), write)
  
  assert false
  assert true
  exhale acc(tuple0$(_0), write)
  goto end_of_method
  label end_of_method
}

method builtin$havoc_bool() returns (ret: Bool)


method builtin$havoc_int() returns (ret: Int)


method builtin$havoc_ref() returns (ret: Ref)
