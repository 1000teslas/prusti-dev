CHECK_PANICS = false
CHECK_BINARY_OPERATIONS = false
ENCODE_UNSIGNED_NUM_CONSTRAINT = false
ENABLE_WHITELIST = true
WHITELIST = [
"typenum::array[0]::{{impl}}[22]::neg[0]",
"typenum::array[0]::{{impl}}[25]::hash[0]",
"typenum::array[0]::{{impl}}[27]::clone[0]",
"typenum::array[0]::{{impl}}[28]::partial_cmp[0]",
"typenum::array[0]::{{impl}}[29]::cmp[0]",
"typenum::array[0]::{{impl}}[2]::len[0]",
"typenum::array[0]::{{impl}}[30]::eq[0]",
"typenum::array[0]::{{impl}}[31]::assert_receiver_is_total_eq[0]",
"typenum::array[0]::{{impl}}[33]::hash[0]",
"typenum::array[0]::{{impl}}[35]::clone[0]",
"typenum::array[0]::{{impl}}[36]::partial_cmp[0]",
"typenum::array[0]::{{impl}}[37]::cmp[0]",
"typenum::array[0]::{{impl}}[38]::eq[0]",
"typenum::array[0]::{{impl}}[38]::ne[0]",
"typenum::array[0]::{{impl}}[39]::assert_receiver_is_total_eq[0]",
"typenum::bit[0]::{{impl}}[0]::new[0]",
"typenum::bit[0]::{{impl}}[1]::new[0]",
"typenum::bit[0]::{{impl}}[24]::min[0]",
"typenum::bit[0]::{{impl}}[27]::max[0]",
"typenum::bit[0]::{{impl}}[2]::to_bool[0]",
"typenum::bit[0]::{{impl}}[2]::to_u8[0]",
"typenum::bit[0]::{{impl}}[30]::default[0]",
"typenum::bit[0]::{{impl}}[32]::hash[0]",
"typenum::bit[0]::{{impl}}[34]::clone[0]",
"typenum::bit[0]::{{impl}}[35]::partial_cmp[0]",
"typenum::bit[0]::{{impl}}[36]::cmp[0]",
"typenum::bit[0]::{{impl}}[37]::eq[0]",
"typenum::bit[0]::{{impl}}[38]::assert_receiver_is_total_eq[0]",
"typenum::bit[0]::{{impl}}[39]::default[0]",
"typenum::bit[0]::{{impl}}[3]::to_bool[0]",
"typenum::bit[0]::{{impl}}[3]::to_u8[0]",
"typenum::bit[0]::{{impl}}[41]::hash[0]",
"typenum::bit[0]::{{impl}}[43]::clone[0]",
"typenum::bit[0]::{{impl}}[44]::partial_cmp[0]",
"typenum::bit[0]::{{impl}}[45]::cmp[0]",
"typenum::bit[0]::{{impl}}[46]::eq[0]",
"typenum::bit[0]::{{impl}}[47]::assert_receiver_is_total_eq[0]",
"typenum::bit[0]::{{impl}}[6]::not[0]",
"typenum::bit[0]::{{impl}}[7]::not[0]",
"typenum::int[0]::{{impl}}[0]::new[0]",
"typenum::int[0]::{{impl}}[101]::clone[0]",
"typenum::int[0]::{{impl}}[102]::partial_cmp[0]",
"typenum::int[0]::{{impl}}[103]::cmp[0]",
"typenum::int[0]::{{impl}}[104]::eq[0]",
"typenum::int[0]::{{impl}}[105]::assert_receiver_is_total_eq[0]",
"typenum::int[0]::{{impl}}[10]::neg[0]",
"typenum::int[0]::{{impl}}[11]::neg[0]",
"typenum::int[0]::{{impl}}[1]::new[0]",
"typenum::int[0]::{{impl}}[2]::new[0]",
"typenum::int[0]::{{impl}}[63]::min[0]",
"typenum::int[0]::{{impl}}[64]::min[0]",
"typenum::int[0]::{{impl}}[68]::min[0]",
"typenum::int[0]::{{impl}}[6]::to_i16[0]",
"typenum::int[0]::{{impl}}[6]::to_i32[0]",
"typenum::int[0]::{{impl}}[6]::to_i64[0]",
"typenum::int[0]::{{impl}}[6]::to_i8[0]",
"typenum::int[0]::{{impl}}[6]::to_isize[0]",
"typenum::int[0]::{{impl}}[71]::max[0]",
"typenum::int[0]::{{impl}}[74]::max[0]",
"typenum::int[0]::{{impl}}[76]::max[0]",
"typenum::int[0]::{{impl}}[79]::default[0]",
"typenum::int[0]::{{impl}}[7]::to_i16[0]",
"typenum::int[0]::{{impl}}[7]::to_i32[0]",
"typenum::int[0]::{{impl}}[7]::to_i64[0]",
"typenum::int[0]::{{impl}}[7]::to_i8[0]",
"typenum::int[0]::{{impl}}[7]::to_isize[0]",
"typenum::int[0]::{{impl}}[81]::hash[0]",
"typenum::int[0]::{{impl}}[83]::clone[0]",
"typenum::int[0]::{{impl}}[84]::partial_cmp[0]",
"typenum::int[0]::{{impl}}[85]::cmp[0]",
"typenum::int[0]::{{impl}}[86]::eq[0]",
"typenum::int[0]::{{impl}}[86]::ne[0]",
"typenum::int[0]::{{impl}}[87]::assert_receiver_is_total_eq[0]",
"typenum::int[0]::{{impl}}[88]::default[0]",
"typenum::int[0]::{{impl}}[8]::to_i16[0]",
"typenum::int[0]::{{impl}}[8]::to_i32[0]",
"typenum::int[0]::{{impl}}[8]::to_i64[0]",
"typenum::int[0]::{{impl}}[8]::to_i8[0]",
"typenum::int[0]::{{impl}}[8]::to_isize[0]",
"typenum::int[0]::{{impl}}[90]::hash[0]",
"typenum::int[0]::{{impl}}[92]::clone[0]",
"typenum::int[0]::{{impl}}[93]::partial_cmp[0]",
"typenum::int[0]::{{impl}}[94]::cmp[0]",
"typenum::int[0]::{{impl}}[95]::eq[0]",
"typenum::int[0]::{{impl}}[95]::ne[0]",
"typenum::int[0]::{{impl}}[96]::assert_receiver_is_total_eq[0]",
"typenum::int[0]::{{impl}}[97]::default[0]",
"typenum::int[0]::{{impl}}[99]::hash[0]",
"typenum::int[0]::{{impl}}[9]::neg[0]",
"typenum::private[0]::{{impl}}[0]::to_u64[0]",
"typenum::uint[0]::{{impl}}[0]::new[0]",
"typenum::uint[0]::{{impl}}[122]::private_min[0]",
"typenum::uint[0]::{{impl}}[126]::private_max[0]",
"typenum::uint[0]::{{impl}}[128]::max[0]",
"typenum::uint[0]::{{impl}}[130]::default[0]",
"typenum::uint[0]::{{impl}}[132]::hash[0]",
"typenum::uint[0]::{{impl}}[134]::clone[0]",
"typenum::uint[0]::{{impl}}[135]::partial_cmp[0]",
"typenum::uint[0]::{{impl}}[136]::cmp[0]",
"typenum::uint[0]::{{impl}}[137]::eq[0]",
"typenum::uint[0]::{{impl}}[138]::assert_receiver_is_total_eq[0]",
"typenum::uint[0]::{{impl}}[139]::default[0]",
"typenum::uint[0]::{{impl}}[141]::hash[0]",
"typenum::uint[0]::{{impl}}[143]::clone[0]",
"typenum::uint[0]::{{impl}}[144]::partial_cmp[0]",
"typenum::uint[0]::{{impl}}[145]::cmp[0]",
"typenum::uint[0]::{{impl}}[146]::eq[0]",
"typenum::uint[0]::{{impl}}[146]::ne[0]",
"typenum::uint[0]::{{impl}}[147]::assert_receiver_is_total_eq[0]",
"typenum::uint[0]::{{impl}}[1]::to_i16[0]",
"typenum::uint[0]::{{impl}}[1]::to_i32[0]",
"typenum::uint[0]::{{impl}}[1]::to_i64[0]",
"typenum::uint[0]::{{impl}}[1]::to_i8[0]",
"typenum::uint[0]::{{impl}}[1]::to_isize[0]",
"typenum::uint[0]::{{impl}}[1]::to_u16[0]",
"typenum::uint[0]::{{impl}}[1]::to_u32[0]",
"typenum::uint[0]::{{impl}}[1]::to_u64[0]",
"typenum::uint[0]::{{impl}}[1]::to_u8[0]",
"typenum::uint[0]::{{impl}}[1]::to_usize[0]",
"typenum::uint[0]::{{impl}}[2]::new[0]",
"typenum::uint[0]::{{impl}}[7]::len[0]",
"typenum::{{impl}}[0]::to_ordering[0]",
"typenum::{{impl}}[10]::eq[0]",
"typenum::{{impl}}[11]::assert_receiver_is_total_eq[0]",
"typenum::{{impl}}[12]::default[0]",
"typenum::{{impl}}[14]::hash[0]",
"typenum::{{impl}}[16]::clone[0]",
"typenum::{{impl}}[17]::partial_cmp[0]",
"typenum::{{impl}}[18]::cmp[0]",
"typenum::{{impl}}[19]::eq[0]",
"typenum::{{impl}}[1]::to_ordering[0]",
"typenum::{{impl}}[20]::assert_receiver_is_total_eq[0]",
"typenum::{{impl}}[21]::default[0]",
"typenum::{{impl}}[23]::hash[0]",
"typenum::{{impl}}[25]::clone[0]",
"typenum::{{impl}}[26]::partial_cmp[0]",
"typenum::{{impl}}[27]::cmp[0]",
"typenum::{{impl}}[28]::eq[0]",
"typenum::{{impl}}[29]::assert_receiver_is_total_eq[0]",
"typenum::{{impl}}[2]::to_ordering[0]",
"typenum::{{impl}}[3]::default[0]",
"typenum::{{impl}}[5]::hash[0]",
"typenum::{{impl}}[7]::clone[0]",
"typenum::{{impl}}[8]::partial_cmp[0]",
"typenum::{{impl}}[9]::cmp[0]"
]
