CHECK_PANICS = false
CHECK_BINARY_OPERATIONS = false
ENCODE_UNSIGNED_NUM_CONSTRAINT = false
ENABLE_WHITELIST = true
WHITELIST = [
"draw_state::state[0]::{{impl}}[0]::new_fill[0]",
"draw_state::state[0]::{{impl}}[0]::with_cull_back[0]",
"draw_state::state[0]::{{impl}}[102]::clone[0]",
"draw_state::state[0]::{{impl}}[107]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[110]::clone[0]",
"draw_state::state[0]::{{impl}}[115]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[118]::clone[0]",
"draw_state::state[0]::{{impl}}[119]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[120]::eq[0]",
"draw_state::state[0]::{{impl}}[120]::ne[0]",
"draw_state::state[0]::{{impl}}[121]::cmp[0]",
"draw_state::state[0]::{{impl}}[122]::hash[0]",
"draw_state::state[0]::{{impl}}[123]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[126]::clone[0]",
"draw_state::state[0]::{{impl}}[127]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[128]::eq[0]",
"draw_state::state[0]::{{impl}}[128]::ne[0]",
"draw_state::state[0]::{{impl}}[129]::hash[0]",
"draw_state::state[0]::{{impl}}[130]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[131]::default[0]",
"draw_state::state[0]::{{impl}}[133]::clone[0]",
"draw_state::state[0]::{{impl}}[134]::hash[0]",
"draw_state::state[0]::{{impl}}[135]::cmp[0]",
"draw_state::state[0]::{{impl}}[136]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[137]::clone[0]",
"draw_state::state[0]::{{impl}}[138]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[139]::eq[0]",
"draw_state::state[0]::{{impl}}[139]::ne[0]",
"draw_state::state[0]::{{impl}}[13]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[141]::fmt[0]::__BitFlags[0]::ALPHA[0]",
"draw_state::state[0]::{{impl}}[141]::fmt[0]::__BitFlags[0]::BLUE[0]",
"draw_state::state[0]::{{impl}}[141]::fmt[0]::__BitFlags[0]::GREEN[0]",
"draw_state::state[0]::{{impl}}[141]::fmt[0]::__BitFlags[0]::RED[0]",
"draw_state::state[0]::{{impl}}[146]::all[0]::__BitFlags[0]::ALPHA[0]",
"draw_state::state[0]::{{impl}}[146]::all[0]::__BitFlags[0]::BLUE[0]",
"draw_state::state[0]::{{impl}}[146]::all[0]::__BitFlags[0]::GREEN[0]",
"draw_state::state[0]::{{impl}}[146]::all[0]::__BitFlags[0]::RED[0]",
"draw_state::state[0]::{{impl}}[146]::bits[0]",
"draw_state::state[0]::{{impl}}[146]::contains[0]",
"draw_state::state[0]::{{impl}}[146]::empty[0]",
"draw_state::state[0]::{{impl}}[146]::from_bits_truncate[0]",
"draw_state::state[0]::{{impl}}[146]::intersects[0]",
"draw_state::state[0]::{{impl}}[146]::is_all[0]",
"draw_state::state[0]::{{impl}}[146]::is_empty[0]",
"draw_state::state[0]::{{impl}}[146]::set[0]",
"draw_state::state[0]::{{impl}}[157]::from_iter[0]",
"draw_state::state[0]::{{impl}}[158]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[159]::eq[0]",
"draw_state::state[0]::{{impl}}[159]::ne[0]",
"draw_state::state[0]::{{impl}}[160]::hash[0]",
"draw_state::state[0]::{{impl}}[161]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[164]::clone[0]",
"draw_state::state[0]::{{impl}}[16]::clone[0]",
"draw_state::state[0]::{{impl}}[17]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[18]::eq[0]",
"draw_state::state[0]::{{impl}}[18]::ne[0]",
"draw_state::state[0]::{{impl}}[19]::hash[0]",
"draw_state::state[0]::{{impl}}[1]::default[0]",
"draw_state::state[0]::{{impl}}[20]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[23]::clone[0]",
"draw_state::state[0]::{{impl}}[28]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[2]::new[0]",
"draw_state::state[0]::{{impl}}[31]::clone[0]",
"draw_state::state[0]::{{impl}}[35]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[38]::clone[0]",
"draw_state::state[0]::{{impl}}[39]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[3]::default[0]",
"draw_state::state[0]::{{impl}}[40]::eq[0]",
"draw_state::state[0]::{{impl}}[41]::cmp[0]",
"draw_state::state[0]::{{impl}}[42]::hash[0]",
"draw_state::state[0]::{{impl}}[43]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[46]::clone[0]",
"draw_state::state[0]::{{impl}}[47]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[48]::eq[0]",
"draw_state::state[0]::{{impl}}[48]::ne[0]",
"draw_state::state[0]::{{impl}}[49]::hash[0]",
"draw_state::state[0]::{{impl}}[4]::default[0]",
"draw_state::state[0]::{{impl}}[50]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[53]::clone[0]",
"draw_state::state[0]::{{impl}}[58]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[5]::new[0]",
"draw_state::state[0]::{{impl}}[61]::clone[0]",
"draw_state::state[0]::{{impl}}[66]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[69]::clone[0]",
"draw_state::state[0]::{{impl}}[70]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[71]::eq[0]",
"draw_state::state[0]::{{impl}}[71]::ne[0]",
"draw_state::state[0]::{{impl}}[72]::cmp[0]",
"draw_state::state[0]::{{impl}}[73]::hash[0]",
"draw_state::state[0]::{{impl}}[74]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[77]::clone[0]",
"draw_state::state[0]::{{impl}}[78]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[79]::eq[0]",
"draw_state::state[0]::{{impl}}[79]::ne[0]",
"draw_state::state[0]::{{impl}}[7]::default[0]",
"draw_state::state[0]::{{impl}}[80]::cmp[0]",
"draw_state::state[0]::{{impl}}[81]::hash[0]",
"draw_state::state[0]::{{impl}}[82]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[83]::default[0]",
"draw_state::state[0]::{{impl}}[86]::clone[0]",
"draw_state::state[0]::{{impl}}[87]::partial_cmp[0]",
"draw_state::state[0]::{{impl}}[88]::eq[0]",
"draw_state::state[0]::{{impl}}[88]::ne[0]",
"draw_state::state[0]::{{impl}}[89]::cmp[0]",
"draw_state::state[0]::{{impl}}[90]::hash[0]",
"draw_state::state[0]::{{impl}}[91]::assert_receiver_is_total_eq[0]",
"draw_state::state[0]::{{impl}}[94]::clone[0]",
"draw_state::state[0]::{{impl}}[99]::assert_receiver_is_total_eq[0]",
"draw_state::target[0]::{{impl}}[0]::partial_cmp[0]",
"draw_state::target[0]::{{impl}}[10]::assert_receiver_is_total_eq[0]",
"draw_state::target[0]::{{impl}}[11]::eq[0]",
"draw_state::target[0]::{{impl}}[11]::ne[0]",
"draw_state::target[0]::{{impl}}[13]::fmt[0]::__BitFlags[0]::X[0]",
"draw_state::target[0]::{{impl}}[13]::fmt[0]::__BitFlags[0]::Y[0]",
"draw_state::target[0]::{{impl}}[18]::all[0]::__BitFlags[0]::X[0]",
"draw_state::target[0]::{{impl}}[18]::all[0]::__BitFlags[0]::Y[0]",
"draw_state::target[0]::{{impl}}[18]::bits[0]",
"draw_state::target[0]::{{impl}}[18]::contains[0]",
"draw_state::target[0]::{{impl}}[18]::empty[0]",
"draw_state::target[0]::{{impl}}[18]::from_bits_truncate[0]",
"draw_state::target[0]::{{impl}}[18]::intersects[0]",
"draw_state::target[0]::{{impl}}[18]::is_all[0]",
"draw_state::target[0]::{{impl}}[18]::is_empty[0]",
"draw_state::target[0]::{{impl}}[18]::set[0]",
"draw_state::target[0]::{{impl}}[1]::eq[0]",
"draw_state::target[0]::{{impl}}[1]::ne[0]",
"draw_state::target[0]::{{impl}}[29]::from_iter[0]",
"draw_state::target[0]::{{impl}}[2]::hash[0]",
"draw_state::target[0]::{{impl}}[5]::clone[0]",
"draw_state::target[0]::{{impl}}[6]::hash[0]",
"draw_state::target[0]::{{impl}}[7]::cmp[0]",
"draw_state::target[0]::{{impl}}[8]::partial_cmp[0]",
"draw_state::target[0]::{{impl}}[9]::clone[0]"
]
